// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MusicDiscoveryAPI.Data;

#nullable disable

namespace MusicDiscoveryAPI.Migrations
{
    [DbContext(typeof(MusicDiscoveryContext))]
    [Migration("20250825131156_FixIsPublicVisibility")]
    partial class FixIsPublicVisibility
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("MusicDiscoveryAPI.Models.Playlist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Playlists");
                });

            modelBuilder.Entity("MusicDiscoveryAPI.Models.Song", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Album")
                        .HasColumnType("TEXT");

                    b.Property<string>("Artist")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Duration")
                        .HasColumnType("TEXT");

                    b.Property<string>("Genre")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReleaseYear")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Songs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Album = "Imagine",
                            Artist = "John Lennon",
                            Duration = "3:04",
                            Genre = "Rock",
                            ReleaseYear = "1971",
                            Title = "Imagine"
                        },
                        new
                        {
                            Id = 2,
                            Album = "Thriller",
                            Artist = "Michael Jackson",
                            Duration = "4:54",
                            Genre = "Pop",
                            ReleaseYear = "1982",
                            Title = "Billie Jean"
                        },
                        new
                        {
                            Id = 3,
                            Album = "A Night at the Opera",
                            Artist = "Queen",
                            Duration = "5:55",
                            Genre = "Rock",
                            ReleaseYear = "1975",
                            Title = "Bohemian Rhapsody"
                        },
                        new
                        {
                            Id = 4,
                            Album = "Divide",
                            Artist = "Ed Sheeran",
                            Duration = "3:53",
                            Genre = "Pop",
                            ReleaseYear = "2017",
                            Title = "Shape of You"
                        },
                        new
                        {
                            Id = 5,
                            Album = "8 Mile",
                            Artist = "Eminem",
                            Duration = "5:26",
                            Genre = "Hip-Hop",
                            ReleaseYear = "2002",
                            Title = "Lose Yourself"
                        },
                        new
                        {
                            Id = 6,
                            Album = "21",
                            Artist = "Adele",
                            Duration = "3:48",
                            Genre = "Soul",
                            ReleaseYear = "2010",
                            Title = "Rolling in the Deep"
                        },
                        new
                        {
                            Id = 7,
                            Album = "Nevermind",
                            Artist = "Nirvana",
                            Duration = "5:01",
                            Genre = "Grunge",
                            ReleaseYear = "1991",
                            Title = "Smells Like Teen Spirit"
                        },
                        new
                        {
                            Id = 8,
                            Album = "After Hours",
                            Artist = "The Weeknd",
                            Duration = "3:20",
                            Genre = "Synthpop",
                            ReleaseYear = "2019",
                            Title = "Blinding Lights"
                        },
                        new
                        {
                            Id = 9,
                            Album = "Uptown Special",
                            Artist = "Mark Ronson ft. Bruno Mars",
                            Duration = "4:30",
                            Genre = "Funk",
                            ReleaseYear = "2014",
                            Title = "Uptown Funk"
                        },
                        new
                        {
                            Id = 10,
                            Album = "Viva la Vida or Death and All His Friends",
                            Artist = "Coldplay",
                            Duration = "4:02",
                            Genre = "Alternative",
                            ReleaseYear = "2008",
                            Title = "Viva La Vida"
                        });
                });

            modelBuilder.Entity("MusicDiscoveryAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PlaylistSong", b =>
                {
                    b.Property<int>("PlaylistsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SongsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PlaylistsId", "SongsId");

                    b.HasIndex("SongsId");

                    b.ToTable("PlaylistSong");
                });

            modelBuilder.Entity("MusicDiscoveryAPI.Models.Playlist", b =>
                {
                    b.HasOne("MusicDiscoveryAPI.Models.User", null)
                        .WithMany("Playlists")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PlaylistSong", b =>
                {
                    b.HasOne("MusicDiscoveryAPI.Models.Playlist", null)
                        .WithMany()
                        .HasForeignKey("PlaylistsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MusicDiscoveryAPI.Models.Song", null)
                        .WithMany()
                        .HasForeignKey("SongsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MusicDiscoveryAPI.Models.User", b =>
                {
                    b.Navigation("Playlists");
                });
#pragma warning restore 612, 618
        }
    }
}
